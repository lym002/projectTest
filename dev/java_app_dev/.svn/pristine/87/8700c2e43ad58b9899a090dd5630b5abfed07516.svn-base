<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jsjf.dao.product.DrProductInvestDAO">
    <resultMap id="DrProductInvestResult" type="com.jsjf.model.product.DrProductInvest">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="fid" property="fid" jdbcType="INTEGER"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="investTime" property="investTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="factAmount" property="factAmount" jdbcType="DECIMAL"/>
        <result column="interest" property="interest" jdbcType="DECIMAL"/>
        <result column="factInterest" property="factInterest" jdbcType="DECIMAL"/>
        <result column="joinType" property="joinType" jdbcType="INTEGER"/>
        <result column="continuePeriod" property="continuePeriod"
                jdbcType="VARCHAR"/>
        <result column="deadline" property="deadline" jdbcType="INTEGER"/>
        <result column="activityRate" property="activityRate" jdbcType="DECIMAL"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="specialRate" property="specialRate" jdbcType="DECIMAL"/>
        <result column="experience" property="experience" jdbcType="VARCHAR"/>
        <result column="productStatus" property="productStatus"
                jdbcType="INTEGER"/>
        <result column="productType" property="productType" jdbcType="INTEGER"/>
        <result column="prizeName" property="prizeName" jdbcType="VARCHAR"/>
        <result column="periodLabel" property="periodLabel" jdbcType="VARCHAR"/>
        <result column="interestTime" property="interestTime" jdbcType="TIMESTAMP"/>
        <result column="expireInterest" property="expireInterest"
                jdbcType="DECIMAL"/>

        <result column="shouldPrincipalPeriod" property="shouldPrincipalPeriod"
                jdbcType="DECIMAL"/>
        <result column="shouldInterestPeriod" property="shouldInterestPeriod"
                jdbcType="DECIMAL"/>
        <result column="nextShouldTime" property="nextShouldTime"
                jdbcType="TIMESTAMP"/>
        <result column="repayPeriod" property="repayPeriod" jdbcType="INTEGER"/>
        <result column="expireInterest" property="expireInterest"
                jdbcType="DECIMAL"/>
        <result column="evid" property="evid"
                jdbcType="VARCHAR"/>
    </resultMap>


    <select id="selectByPrimaryKey" resultMap="DrProductInvestResult"
            parameterType="java.util.HashMap">
        select * from dr_product_invest where id = #{id} and uid
        = #{uid}
    </select>
    <select id="selectInvestLogByParam" parameterType="java.util.HashMap"
            resultMap="DrProductInvestResult">
        select if(pri.name = "50元话费",if(jpi.phone is null,0,1),if(jpi.address
        is null,0,1)) as isPerfect,if(pri.name = "50元话费",1,0) as prizeType,
        if(pri.name is null,if((SELECT 1 FROM `js_activity_product` WHERE pid
        = dp.id),'iphone7',''),pri.name) prizeName,
        dpi.*,
        IF(dpi.status =
        0,dpi.interest,dpi.factInterest) AS expireInterest,
        dm.mobilephone,CONCAT(SUBSTRING(dmi.realName,1,1),'XX')
        realName,dmi.idcards,
        dmi.sex,dp.fullName,
        dp.amount as productAmount,
        dp.rate,dmf.multiple,dp.sid, dp.fid prePid,dp.repayType,
        dp.deadline,
        case dp.type when 1 then DATE_ADD(dpi.investTime,INTERVAL 1 day)
        when 5
        then DATE_ADD(dpi.investTime,INTERVAL 1 day)
        else dp.establish end as
        establish,
        DATE_ADD(dpi.investTime,INTERVAL 1 DAY) AS interestTime,
        case dp.type when 1 then (select concat('到期续投',period,'天标') from
        `js_novice_continue_record` where newInvestId = dpi.id)end as
        periodLabel,
        case dp.type when 1 then dp.id end as newHandId,
        case
        dp.type when if(dp.type in (1,5),dp.type,-1) then (select
        IFNULL(MAX(repay.shouldTime),DATE_ADD(dpi.investTime,INTERVAL
        dp.deadline+1 DAY)) from dr_product_invest_repayinfo repay where
        repay.uid = dm.uid and repay.investid = dpi.id)
        WHEN 2 THEN ( CASE
        dp.repayType when if(dp.repayType in
        (2,3,4),dp.repayType,-1) THEN
        IFNULL((select MAX(detail.shouldTime)
        from dr_product_info_repay_detail
        detail where detail.pid = dp.id and
        detail.`status` = 1
        ),dp.expireDate) else dp.expireDate end)
        else dp.expireDate end as
        expireDate,dp.repayType,
        if(dp.type=5,3,dmf.type) couponType,
        if(dp.type=5,(select sum(amount)
        from dr_member_favourable where
        FIND_IN_SET(id,dpi.experience)),dmf.amount) couponAmount,
        dmf.raisedRates couponRate,jr.period
        continuePeriod,dp.activityRate,dp.type,
        dpi.status productStatus,
        if(dp.prizeId is null,IF((SELECT 1 FROM `js_activity_product` WHERE
        pid =
        dp.id),2,0),1) productType,
        TRUNCATE(IFNULL(repay.shouldPrincipal,if(dp.repayType
        =3,dpi.amount/(dp.deadline/7),if(dp.repayType=4,dpi.amount/(dp.deadline/30),dpi.amount))),2)
        as shouldPrincipalPeriod,
        TRUNCATE(IFNULL(repay.shouldInterest,if(dp.repayType=3,dpi.interest/(dp.deadline/7),if(dp.repayType=4,dpi.interest/(dp.deadline/30),dpi.interest))),2)
        as shouldInterestPeriod,
        IFNULL(repay.nextShouldTime,IF(dp.repayType=3,DATE_ADD(dp.establish,INTERVAL
        7 DAY),if(dp.repayType=4,DATE_ADD(dp.establish,INTERVAL 30
        DAY),dp.expireDate))) as nextShouldTime,
        TRUNCATE(IFNULL(repay.repayPeriod,if(dp.repayType=
        3,(dp.deadline/7),if(dp.repayType=4,(dp.deadline/30),dp.deadline))),2)
        as repayPeriod

        from dr_product_invest dpi
        left join dr_product_info dp
        on dpi.pid = dp.id
        left join dr_member_base_info dmi on dpi.uid =
        dmi.uid
        left join
        dr_member dm on dm.uid = dpi.uid
        left join
        dr_member_favourable dmf on
        dmf.id = dpi.fid
        left join
        js_novice_continue_record jr on
        jr.newInvestId = dpi.id
        left join
        `js_product_prize` pri on dp.prizeId
        = pri.id
        left join `js_member_info`
        jpi on jpi.investId = dpi.id
        left
        join (SELECT
        shouldPrincipal,shouldInterest, MIN(if(status =
        0,shouldTime,NULL))
        nextShouldTime, COUNT(1) repayPeriod,investId from
        dr_product_invest_repayinfo where 1=1
        <if test="uid != null">and uid = #{uid}</if>
        GROUP BY investId,uid) repay on repay.investId = dpi.id

        <where>
            <if test="uid != null">and dpi.uid = #{uid}</if>
            <if test="pid != null">and dpi.pid = #{pid}</if>
            <if test="type != null">and dp.type = #{type}</if>
            <if test="notType != null">and dp.type != #{notType}</if>
            <if test="status != null ">and dpi.status = #{status}</if>
            <if test="statuses != null ">
                and dpi.status in
                <foreach collection="statuses" index="item" open="(" close=")"
                         separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
        order by dpi.investTime desc,dpi.status desc
        limit #{offset},#{limit}
    </select>
    <select id="selectInvestLogCountByParam" parameterType="java.util.HashMap"
            resultType="int">
        SELECT
        count(dpi.id)
        FROM
        dr_product_invest dpi
        LEFT JOIN dr_product_info
        dp ON dpi.pid = dp.id
        LEFT JOIN dr_member dm on dpi.uid=dm.uid
        <where>
            <if test="uid != null">and dpi.uid = #{uid}</if>
            <if test="pid != null">and dpi.pid = #{pid}</if>
            <if test="type != null">and dp.type = #{type}</if>
            <if test="notType != null">and dp.type != #{notType}</if>
            <if test="status != null ">and dpi.status = #{status}</if>
            <if test="statuses != null ">
                and dpi.status in
                <foreach item="item" collection="statuses" index="index"
                         open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="barring != null ">
                and dp.type not in
                <foreach item="item" collection="barring" index="index"
                         open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="types != null">
                and dp.type in
                <foreach collection="types" item="item" open="(" close=")"
                         separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="phones != null ">
                and dm.mobilePhone not in
                <foreach item="item" collection="phones" open="(" separator=","
                         close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by dpi.investTime desc
    </select>

    <insert id="insertSelective" parameterType="com.jsjf.model.product.DrProductInvest"
            useGeneratedKeys="true" keyProperty="id">
        insert into dr_product_invest
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">uid,</if>
            <if test="pid != null">pid,</if>
            <if test="amount != null">amount,</if>
            <if test="investTime != null">investTime,</if>
            <if test="status != null">status,</if>
            <if test="factAmount != null">factAmount,</if>
            <if test="interest != null">interest,</if>
            <if test="factInterest != null">factInterest,</if>
            <if test="joinType != null">joinType,</if>
            <if test="fid != null">fid,</if>
            <if test="specialRate != null">specialRate,</if>
            <if test="experience != null">experience,</if>
            <if test="contract_no != null">contract_no,</if>
            <if test="mchnt_txn_ssn != null">mchnt_txn_ssn,</if>
        </trim>
        <trim prefix=" values ( " suffix=")" suffixOverrides=",">
            <if test="uid != null">#{uid},</if>
            <if test="pid != null">#{pid},</if>
            <if test="amount != null">#{amount},</if>
            <if test="investTime != null">#{investTime},</if>
            <if test="status != null">#{status},</if>
            <if test="factAmount != null">#{factAmount},</if>
            <if test="interest != null">#{interest},</if>
            <if test="factInterest != null">#{factInterest},</if>
            <if test="joinType != null">#{joinType},</if>
            <if test="fid != null">#{fid},</if>
            <if test="specialRate != null">#{specialRate},</if>
            <if test="experience != null">#{experience},</if>
            <if test="contract_no != null">#{contract_no},</if>
            <if test="mchnt_txn_ssn != null">#{mchnt_txn_ssn},</if>
        </trim>
    </insert>
    <!-- 获取产品投资人数 -->
    <select id="selectInvestNumsByPid" parameterType="java.lang.Integer"
            resultType="int">
        select count(id) from dr_product_invest where pid = #{pid}
    </select>
    <!-- 根据状态获取用户对应本金 -->
    <select id="selectUserSumPrincipalByStatus" resultType="java.math.BigDecimal"
            parameterType="java.util.HashMap">
        select ifnull(sum(case status when 0 then amount else factAmount end
        ),0) from dr_product_invest
        <where>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="statuses != null">
                and status in
                <foreach item="item" collection="statuses" index="index"
                         open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <!-- 根据状态获取用户对应利息 -->
    <select id="selectUserSumInterestByStatus" resultType="java.math.BigDecimal"
            parameterType="java.util.HashMap">
        select ifnull(sum(case status when 0 then interest else factInterest
        end ),0) from dr_product_invest
        <where>
            <if test="uid != null">
                and uid = #{uid}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="statuses != null">
                and status in
                <foreach item="item" collection="statuses" index="index"
                         open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <!-- 根据用户id以及状态获取体验金 -->
    <select id="selectExperienceByStatus" resultType="java.math.BigDecimal">
        select
        ifnull(sum(d.amount),0) from dr_product_invest di left join
        dr_member_favourable d on d.id = di.fid where di.uid = #{uid} and
        d.type = #{type} and d.status = #{status}
    </select>

    <!-- 统计用户投资次数 -->
    <select id="selectInvestCountByMap" parameterType="java.util.HashMap"
            resultType="Integer">
        select count(1) from dr_product_invest inv
        left join dr_product_info
        dpi ON inv.pid = dpi.id
        <where>
            inv.status != 2
            <if test="uid != null and uid != '' ">
                and inv.uid = #{uid:INTEGER}
            </if>
            <if test="pid !=null ">and inv.pid = #{pid}</if>
            <if test="barring != null and barring != ''">
                and dpi.type not in
                <foreach collection="barring" item="item" open="(" close=")"
                         separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectUserLastInvestmentInfo" parameterType="java.lang.Integer"
            resultType="java.util.HashMap">
        select b.type,max(a.factTime) as
        expireDate,if(MAX(a.factTime)>SYSDATE(),0,1) as flag
        from
        dr_product_invest_repayinfo a,
        (select dpi.uid,dpi.id,dp.type from
        dr_product_invest dpi
        LEFT JOIN dr_product_info dp ON dpi.pid = dp.id
        where dpi.uid=#{uid}
        order by investTime DESC
        LIMIT 0,1) b
        where
        a.investid = b.id
    </select>
    <select id="selectInvestList" parameterType="java.util.HashMap"
            resultMap="DrProductInvestResult">
        select s.* from dr_product_invest s
        left join dr_product_info i on
        s.pid = i.id
        <trim prefix=" where " prefixOverrides="and">
            <if test="uid != null">and s.uid = #{uid}</if>
            <if test="deadline != null">
                and <![CDATA[ i.deadline >= #{deadline} ]]>
            </if>
            <if test="amount != null">
                and <![CDATA[ s.amount >= #{amount} ]]>
            </if>
        </trim>
    </select>

    <select id="selectInvest" resultMap="DrProductInvestResult">
        select
        CONCAT(substring(mobilePhone,1,length(mobilePhone) - 8 ) ,'****'
        ,substring(mobilePhone,-4)) as mobilePhone,dp.amount as amount from
        dr_member dm
        inner join dr_product_invest dp on dm.uid=dp.uid
        where
        dp.amount>0 order by investTime desc limit 100
    </select>
    <select id="selectInvestCountExcludeNewHand" resultType="int"
            parameterType="int">
        SELECT COUNT(i.id) from dr_product_invest i
        LEFT JOIN dr_product_info
        dpi on i.pid = dpi.id
        where 1=1 and dpi.type !=1
        and i.`status` != 2 and
        dpi.deadline <![CDATA[ >= ]]>
        30
        and i.uid = #{uid}
    </select>

    <select id="selectInvestByMap" resultMap="DrProductInvestResult"
            parameterType="java.util.HashMap">
        SELECT dpi.*,dp.deadline from dr_product_invest dpi
        LEFT JOIN
        dr_product_info dp ON dpi.pid = dp.id
        <trim prefix=" where " prefixOverrides="and">
            <if test="id !=null">and dpi.id = #{id}</if>
            <if test="uid !=null">and dpi.uid = #{uid}</if>
            <if test="type !=null">and dp.type = #{type}</if>
            <if test="pStatus !=null">and dp.status = #{pStatus}</if>
            <if test="status !=null">and dpi.status = #{status}</if>
            <if test="isShow !=null">and dp.isShow = #{isShow}</if>
            <if test="deadline !=null">and dp.deadline = #{deadline}</if>
            <if test="pid !=null">and dpi.pid = #{pid}</if>
        </trim>
        <if test="order !=null and order !=''">order by #{order}</if>
        <if test="offset != null and limit !=null">
            limit #{offset},#{limit}
        </if>
    </select>
    <!-- 判断用户是否投资过新手标或者体验标 -->
    <select id="checkProductType" parameterType="java.util.HashMap"
            resultType="com.jsjf.model.product.DrProductInvest">
        select * from dr_product_invest dpi
        left join `dr_product_info` dp on
        dpi.`pid` = dp.`id`
        <where>
            <if test="uid != null">
                dpi.`uid` = #{uid}
            </if>
            <if test="type != null ">
                and dp.`type` = #{type}
            </if>
            <if test="isNewHand != null ">
                and dp.`type` != #{isNewHand}
            </if>
            <if test="phones != null ">
                and dm.mobilePhone not IN
                <foreach item="item" index="index" collection="phones" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="isInvestSend == 1 ">
                and dp.`prizeId` is not null
            </if>
        </where>
        order by dpi.investTime desc
    </select>
    <select id="selectIsOldUserById" resultType="int" parameterType="int">
        select ifnull(COUNT(1),0) as oldUser from dr_product_invest a
        left join
        dr_product_info b on a.pid = b.id
        where a.uid = #{uid} and b.type not
        in('1','5')
    </select>
    <!-- 新手标投资人数 -->
    <select id="selectExperInvestNumsByPid" parameterType="java.lang.Integer"
            resultType="int">
        select ifnull(count(distinct(dpi.`uid`)),0) from
        `dr_product_invest` dpi where dpi.`pid` = #{pid}
    </select>
    <select id="selectSimpleInvestLog" parameterType="java.lang.Integer"
            resultType="com.jsjf.model.product.DrProductInvest">
        SELECT dpi.*,CONCAT(LEFT(dmbi.realname,1),'xx')
        realName,CONCAT(LEFT(dmbi.idcards,3),'xxxxxxxxxxxxxxx')
        idcards,dmbi.sex
        ,concat(SubString(dm.mobilePhone,1,3),"****",SubString(dm.mobilePhone,8))
        mobilephone from dr_product_invest dpi
        LEFT JOIN dr_member_base_info
        dmbi ON dpi.uid = dmbi.uid
        left join dr_member dm on dpi.uid = dm.uid
        where dpi.pid = #{pid}
        ORDER BY
        dpi.investTime DESC
    </select>
    <!-- 根据条件查询是否可提现 -->
    <select id="selectInvestCount" resultType="Integer"
            parameterType="Integer">
        SELECT count(1) FROM `dr_product_invest` a
        LEFT JOIN
        `dr_product_info` b ON a.pid = b.id
        WHERE a.uid = #{uid} AND (b.type !=
        5 and b.type != 1) AND a.status !=2
    </select>
    <!-- 查询投资体验标人的list -->
    <select id="selectNoviceList" resultType="com.jsjf.model.product.DrProductInvest">
        select
        concat(substring(c.mobilePhone,1,3),"****",substring(c.mobilePhone,8))
        mobilePhone,a.amount amount from `dr_product_invest` a
        left join
        `dr_product_info` b on a.pid = b.id
        left join `dr_member` c on a.uid =
        c.uid
        where b.type = 3 and a.status != 2 order by a.investTime desc
        limit 100
    </select>
    <select id="selectNoviceCount" resultType="Integer">
        select count(1) from
        `dr_product_invest` a
        left join `dr_product_info` b on a.pid = b.id
        where b.type = 3 and a.status != 2
    </select>

    <select id="selectPrizeTypeByInvestId" resultType="Integer">
        SELECT
        IF(c.name = '50元话费',1,0) prizeType FROM dr_product_invest a
        LEFT JOIN
        dr_product_info b ON a.pid = b.id
        LEFT JOIN js_product_prize c ON c.id
        = b.prizeId
        WHERE a.id = #{investId}
    </select>

    <select id="selectprizeInfoByInvestId" resultType="java.util.HashMap"
            parameterType="java.util.HashMap">
        select d.*,c.name collectName,c.phone collectPhone,c.address
        collectaddress ,if(d.name = '50元话费',1,0) prizeType
        from
        dr_product_invest a
        left join dr_product_info b on a.pid = b.id
        left
        join js_member_info c on a.uid = c.uid
        left join js_product_prize d on
        d.id = b.prizeId
        <where>
            <if test="investId !=null ">
                and a.id = #{investId} and c.investId = #{investId}
            </if>
            <if test="pid !=null ">
                and b.id = #{pid}
            </if>
        </where>
    </select>
    <select id="selectInvestSendDrProductInfoByUid" resultType="com.jsjf.model.product.DrProductInvest"
            parameterType="java.lang.Integer">
        select a.*,if(c.name = '50元话费',1,0) as prizeType from
        dr_product_invest a
        left join dr_product_info b on a.pid = b.id
        left
        join `js_product_prize` c
        on b.prizeId = c.id
        where b.prizeId is not
        null and a.uid = #{uid}
        and (select
        ifnull(count(1),0) from
        js_member_info where investId = a.id) = 0
        order by a.investTime desc
    </select>

    <select id="selectProductInvestCountByUid" resultType="int"
            parameterType="int">
        select count(1) from `dr_product_invest` dp
        left join
        `dr_product_info` dpi on dpi.`id` = dp.`pid`
        where dp.`uid` = #{uid}
        and (dpi.type != 5 and dpi.type != 1) and dp.status
        != 2
    </select>


    <select id="selectActivityMay18d" resultType="java.util.Map"
            parameterType="java.util.Map">
        SELECT a.name,IF(38000>a.amount,100,
        IF(62000>a.amount,300,
        IF(120000>a.amount,500,
        IF(350000>a.amount,1000,3000)
        )
        )
        ) as fxAmount,amount
        from (
        SELECT
        TRUNCATE(SUM(dpi.amount),0)
        amount,CONCAT(LEFT(m.realname,1),IF(m.sex=1,'先生','女士'))
        name,MAX(dpi.investTime) as investTime from dr_product_info dp
        LEFT
        JOIN dr_product_invest dpi ON dp.id = dpi.pid and dp.type=2 and
        dp.deadline in (60,180)
        LEFT JOIN dr_member_base_info m ON dpi.uid =
        m.uid
        where dp.type = 2 and dp.deadline in (60,180) and IF(dpi.fid or
        dp.atid or
        dp.prizeId,0,1) and dpi.status !=2
        and
        (DATE_FORMAT(dpi.investTime,'%Y-%m-%d') >=#{startDate} AND #{endDate}
        >= DATE_FORMAT(dpi.investTime,'%Y-%m-%d') )
        GROUP BY dpi.uid HAVING
        SUM(dpi.amount)>=12000

        UNION ALL

        SELECT investAmount amount,name,null
        from js_activity_may18d WHERE status =
        1
        )a ORDER BY a.investTime DESC
        limit 10
    </select>

    <select id="selectIsPerfectByInvestId" resultType="java.util.HashMap"
            parameterType="java.lang.Integer">
        select if(c.name = "50元话费",if(b.phone is
        null,0,1),if(b.address is null,0,1)) as isPerfect,
        if(c.name =
        "50元话费",1,0)as prizeType
        from dr_product_invest a
        left join
        dr_product_info e on a.pid = e.id
        left join js_member_info b on a.id =
        b.investId
        left join js_product_prize c on e.prizeId = c.id
        where
        e.prizeId is not null and a.id = #{investId}
    </select>

    <select id="selectOldInvest" resultType="com.jsjf.model.product.DrProductInvest"
            parameterType="java.util.HashMap">
        SELECT a.* FROM dr_product_invest a
        LEFT JOIN dr_product_info b ON
        a.pid = b.id
        WHERE b.prizeId is not null and a.uid = #{uid} AND
        <![CDATA[ DATE_FORMAT(a.investTime, '%Y-%m-%d-%H-%i-%s') <= DATE_FORMAT(#{addTime}, '%Y-%m-%d-%H-%i-%s') ]]>
    </select>
    <select id="selectInvestSendNotAddress" resultType="com.jsjf.model.product.DrProductInvest"
            parameterType="java.lang.Integer">
        SELECT dpi.*,jmi.*,IF(c.name = '50元话费',1,0) AS prizeType
        FROM dr_product_invest dpi
        LEFT JOIN dr_product_info info ON dpi.pid =
        info.id
        LEFT JOIN js_member_info jmi ON dpi.id = jmi.investId
        LEFT JOIN
        `js_product_prize` c ON info.prizeId = c.id
        WHERE dpi.uid = #{uid} AND
        jmi.id IS NULL AND info.prizeId IS NOT NULL
        ORDER BY dpi.investTime
        DESC
    </select>
    <select id="selectActivityMay18dCount" parameterType="java.util.Map"
            resultType="int">

        SELECT COUNT(1)+2293 from (
        SELECT 1 from dr_product_info dp
        LEFT JOIN dr_product_invest dpi ON dp.id = dpi.pid and dp.type=2 and
        dp.deadline in (60,180)
        LEFT JOIN dr_member_base_info m ON dpi.uid =
        m.uid
        where dp.type = 2 and dp.deadline in (60,180) and IF(dpi.fid or
        dp.atid or
        dp.prizeId,0,1) and dpi.status !=2
        GROUP BY dpi.uid HAVING
        SUM(dpi.amount)>12000
        )a

    </select>
    <select id="selectActivityMay18dInvestAmountByUid"
            parameterType="java.util.Map" resultType="Integer">
        SELECT
        ifnull(SUM(dpi.amount),0) amount from dr_product_info dp
        LEFT JOIN
        dr_product_invest dpi ON dp.id = dpi.pid and dp.type=2 and
        dp.deadline
        in (60,180)
        where dpi.uid = #{uid} and dp.type = 2 and dp.deadline in
        (60,180) and
        IF(dpi.fid or dp.atid or dp.prizeId,0,1) and dpi.status
        !=2
        and (DATE_FORMAT(dpi.investTime,'%Y-%m-%d') >=#{startDate} AND
        #{endDate}
        >= DATE_FORMAT(dpi.investTime,'%Y-%m-%d') )
    </select>

    <select id="selectInvestByDragonBoat" resultType="java.util.HashMap">
        SELECT CONCAT(SUBSTRING(c.mobilePhone,1,LENGTH(c.mobilePhone) - 8 )
        ,'****' ,SUBSTRING(c.mobilePhone,-4)) AS mobilePhone,
        b.investTime AS
        investTime,
        b.amount AS amount
        FROM dr_product_info a
        LEFT JOIN
        dr_product_invest b ON a.id=b.pid
        LEFT JOIN dr_member c ON b.uid =
        c.`uid`
        WHERE b.amount>0 AND a.deadline
        IN(45,75)
        <if test="startTime != null">
            <![CDATA[ and DATE_FORMAT(b.investTime, '%Y-%m-%d') >= DATE_FORMAT(#{startTime}, '%Y-%m-%d') ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[ and DATE_FORMAT(b.investTime, '%Y-%m-%d') <= DATE_FORMAT(#{endTime}, '%Y-%m-%d') ]]>
        </if>
        ORDER BY b.investTime DESC LIMIT 100
    </select>

    <select id="selectInvstSendCountByUid" parameterType="java.lang.Integer"
            resultType="Integer">
        select count(1) from dr_product_invest a
        LEFT JOIN
        dr_product_info b on a.pid = b.id
        where b.prizeId and a.uid = #{uid}
        and a.status not in(0,2)
    </select>

    <select id="selectInvestFirstByUid" parameterType="java.lang.Integer"
            resultType="java.util.Map">
        select dp.investTime as investTime,dp.amount as amount from
        dr_product_invest dp
        LEFT JOIN dr_product_info dpi on dpi.id = dp.pid
        where dp.uid = #{uid} and dpi.type != 5 and dp.status != 2 LIMIT 1
    </select>
    <select id="selectNewInvest" parameterType="java.util.HashMap"
            resultType="java.lang.Integer">
        select id,uid,STATUS,addTime
        from dr_member_funds_record
        WHERE uid = #{uid} and tradeType = 3
        LIMIT 1;
    </select>
    <select id="selectChiZhaList" resultType="java.util.HashMap"
            parameterType="java.util.HashMap">
        select CONVERT(@rownum:=@rownum+1 , CHAR) AS
        rownum,tab.uid,tab.yearInvest,tab.mobilePhone from(
        select a.uid as
        uid, TRUNCATE(SUM(a.amount/360*b.deadline),2) as yearInvest,
        CONCAT(SUBSTRING(c.mobilePhone,1,3),"****",SUBSTRING(c.mobilePhone,8))
        as mobilePhone,
        MAX(a.id) as investId
        from dr_product_invest a
        left join
        dr_product_info b on a.pid = b.id
        left join dr_member c on a.uid =
        c.uid
        where b.deadline in(35,60,180)
        and a.status not in(2,0)
        <if test="thisMonth == 'yes'">
            and DATE_FORMAT(c.regdate,"%Y-%m") =
            DATE_FORMAT(now(),"%Y-%m")
            and DATE_FORMAT(a.investTime,"%Y-%m") =
            DATE_FORMAT(now(),"%Y-%m")
        </if>
        <if test="thisMonth == 'no'">
            and DATE_FORMAT(c.regdate,"%Y-%m") !=
            DATE_FORMAT(now(),"%Y-%m")
            and DATE_FORMAT(a.investTime,"%Y-%m") =
            DATE_FORMAT(now(),"%Y-%m")
        </if>
        <if test="uid != null">
            a.uid = #{uid}
        </if>
        GROUP BY a.uid
        ORDER BY yearInvest desc ,investId
        )tab,(SELECT
        @rownum:=0) r
    </select>
    <select id="getEvidByInvestId" resultType="String">
        select evid
        from
        dr_product_invest
        where id=#{string}
    </select>
    <!-- 获取第一个投资的用户 -->
    <select id="selectOneInvestUser" resultMap="DrProductInvestResult" parameterType="Integer">
        SELECT
        b.id,b.uid,a.fullName
        FROM
        dr_product_info a
        LEFT JOIN dr_product_invest b ON a.id = b.pid
        WHERE
        a.id = #{id}
        ORDER BY
        b.investTime
        LIMIT 1
    </select>
    <!-- 获取累积投资的最多用户 -->
    <select id="selectMaxInvestUser" resultMap="DrProductInvestResult" parameterType="Integer">
        SELECT
        SUM(b.amount) AS sum,b.uid,b.id
        FROM
        dr_product_info a
        LeFT JOIN dr_product_invest b ON a.id = b.pid
        WHERE
        a.id = #{id}
        GROUP BY b.uid
        ORDER BY sum desc ,b.investTime LIMIT 1
    </select>

    <!-- 获取最后投资的用户 -->
    <select id="selectLastInvestUser" resultMap="DrProductInvestResult" parameterType="Integer">
        SELECT
        b.id,b.uid,a.fullName
        FROM
        dr_product_info a
        LEFT JOIN dr_product_invest b ON a.id = b.pid
        WHERE
        a.id = #{id}
        ORDER BY
        b.investTime desc
        LIMIT 1
    </select>
    <!--查询人人有份金额-->
    <select id="selectEveryoneJdCard" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT
        dpi.uid,
        SUM((dpi.amount*dpf.deadline)/360) AS sumAmount
        FROM
        dr_product_invest dpi
        LEFT JOIN dr_product_info dpf on dpi.pid=dpf.id
        <where> dpf.deadline in (30,35,60,180)
        <if test="startDate!=null and startDate!=''">AND investTime <![CDATA[ >= ]]> #{startDate}</if>
        <if test="endDate!=null and endDate!=''">AND investTime <![CDATA[ <= ]]> #{endDate}</if>
        GROUP BY
            dpi.uid
        <if test="uid!=null and uid != ''">
            HAVING
            dpi.uid = #{uid}
        </if>
        </where>
    </select>
    <!--查询人人TOP5-->
    <select id="selectEveryoneTopFive" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT concat(substring(dm.mobilePhone,1,3),"****",substring(dm.mobilePhone,8)) as mobilePhone,
        dpi.uid,
        SUM((dpi.amount*dpf.deadline)/360) AS sumAmount,MAX(dpi.investTime) as investTime
        FROM
        dr_product_invest dpi
        LEFT JOIN dr_member dm on dm.uid=dpi.uid
        LEFT JOIN dr_product_info dpf on dpi.pid=dpf.id
        WHERE dpf.deadline in (30,35,60,180)
        <if test="startDate!=null and startDate!=''">AND dpi.investTime <![CDATA[ >= ]]> #{startDate}</if>
        <if test="endDate!=null and endDate!=''">AND dpi.investTime <![CDATA[ <= ]]> #{endDate}</if>
        AND (SELECT COUNT(0) codes from dr_channel_info where (case type when 1 then INSTR(dm.toFrom,`code`)
        else NULL end) and type =1) = 0 GROUP BY
        dpi.uid
        ORDER BY sumAmount DESC,investTime
        LIMIT 5
    </select>
    <!--查询人人TOP10 VIP3-->
    <select id="selectEveryoneForVIP" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT concat(substring(dm.mobilePhone,1,3),"****",substring(dm.mobilePhone,8)) as mobilePhone,
        dpi.uid,
        SUM((dpi.amount*dpf.deadline)/360) AS sumAmount
        FROM
        dr_product_invest dpi
        LEFT JOIN dr_member dm on dm.uid=dpi.uid
        LEFT JOIN dr_product_info dpf on dpi.pid=dpf.id
        WHERE dpf.deadline in (30,35,60,180)
        <if test="startDate!=null and startDate!=''">AND dpi.investTime <![CDATA[ >= ]]> #{startDate}</if>
        <if test="endDate!=null and endDate!=''">AND dpi.investTime <![CDATA[ <= ]]> #{endDate}</if>
        AND (SELECT COUNT(0) codes from dr_channel_info where (case type when 1 then INSTR(dm.toFrom,`code`)
        else NULL end) and type =1) = 0 GROUP BY
        dpi.uid
        ORDER BY sumAmount DESC
        LIMIT 10
    </select>
    <!--查询人人TOP10-->
    <select id="getEveryoneTopTen" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT bcd.prid,dm.uid,bc.prizeName,
        concat(substring(dm.mobilePhone,1,3),"***",substring(dm.mobilePhone,8)) AS mobilePhone
        FROM
        dr_member dm
        LEFT JOIN byp_commodity_detail bcd on bcd.uid=dm.uid
        LEFT JOIN byp_commodity bc on bc.prid=bcd.prid
        where bcd.`status` = 1 and
        bcd.addtime  <![CDATA[>=]]> '2018-1-24' and bcd.addtime <![CDATA[<=]]>'2018-2-08' and
        activity_id ='ph'
        ORDER BY bcd.addtime desc
        LIMIT 10
    </select>
    <!--查询活动标系列投资最新20条记录-->
    <select id="selectNewInvestByActivityProduct" parameterType="java.util.HashMap"
            resultType="java.util.HashMap">
        SELECT  CONCAT(SUBSTRING(dm.mobilePhone,1,3),"***",SUBSTRING(dm.mobilePhone,8)) AS mobilePhone , dpi.`amount` , dpi.`investTime`
        FROM dr_member dm LEFT JOIN dr_product_invest dpi ON dm.`uid` = dpi.`uid` LEFT JOIN dr_product_info dpinfo ON dpi.`pid` = dpinfo.`id`
        WHERE dpinfo.`fullName` LIKE '%${fullName}%' AND dpi.`status` in (0,1)
        and dpi.investTime  <![CDATA[>=]]> #{beginTime} and dpi.investTime <![CDATA[<=]]> #{endTime} ORDER BY dpi.`investTime` DESC LIMIT 20
    </select>
</mapper>