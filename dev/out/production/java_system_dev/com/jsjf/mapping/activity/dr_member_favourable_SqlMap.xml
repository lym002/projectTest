<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jsjf.dao.activity.DrMemberFavourableDAO">
	<resultMap id="DrMemberFavourableResult" type="com.jsjf.model.activity.DrMemberFavourable">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="activityId" property="activityId" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="code" property="code" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="profitAmount" property="profitAmount" jdbcType="DECIMAL" />
		<result column="raisedRates" property="raisedRates" jdbcType="DECIMAL"/>
		<result column="enableAmount" property="enableAmount" jdbcType="DECIMAL"/>
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="expireDate" property="expireDate" jdbcType="TIMESTAMP" />
		<result column="user_key" property="userKey" jdbcType="INTEGER" />
		<result property="addtime" column="addtime" jdbcType="TIMESTAMP" />
		<result property="source" column="source" jdbcType="INTEGER"/>
		<result property="productDeadline" column="productDeadline" jdbcType="INTEGER" />
		<result property="multiple" column="multiple" jdbcType="DECIMAL"/>
		<result column="iSSplit" property="iSSplit" jdbcType="INTEGER" />
	</resultMap>
	
	<!-- 添加优惠 -->
	<insert id="insertIntoInfo" parameterType="com.jsjf.model.activity.DrMemberFavourable">
		insert into dr_member_favourable
		(activityId,uid,type,code,name,amount,raisedRates,enableAmount,
		status,expireDate,remark,user_key,addtime,source,productDeadline,multiple,iSSplit)
		values 
		(#{activityId},#{uid},#{type},#{code},#{name},#{amount},#{raisedRates},#{enableAmount},
		#{status},#{expireDate},#{remark},#{userKey},sysdate(),#{source},#{productDeadline},#{multiple},#{iSSplit})

	</insert>
	
	<!-- 获取优惠列表 -->
	<select id="getMemberFavourable" parameterType="java.util.HashMap" resultMap="DrMemberFavourableResult">
		select mf.*,IFNULL(u.`name`,'系统') as userName,
		case when mf.type = 1 then mf.amount 
		WHEN mf.type=2 then mf.raisedRates 
		when mf.type=4 then mf.multiple ELSE mf.amount 
		end as num,mf.iSSplit iSSplit
		from dr_member_favourable mf
		left join dr_member dm ON mf.uid = dm.uid
		left join sys_users u ON mf.user_key = u.user_ky
		<where>
			<if test="mobilephone != null and mobilephone!=''">
				and dm.mobilePhone=#{mobilephone}
			</if>
			<if test="recommCodes != null and recommCodes!=''">
				and dm.recommCodes=#{recommCodes}
			</if>
			<if test="source != null">
				and dm.source =#{source}
			</if>
			<if test="fid != null">
				and id = #{fid}
			</if>
		</where>
		order by `status` , expireDate
		LIMIT #{offset},#{limit}
	</select>
	
	<select id="getMemberFavourableByValentine" parameterType="java.util.HashMap" resultMap="DrMemberFavourableResult">
		select dap.id as activityId,dap.type as type,dap.code as code,dap.name as name,dap.amount as amount,dap.raisedRates as raisedRates,dap.enableAmount as enableAmount,
			0 as status,DATE_ADD(NOW(),INTERVAL dap.deadline DAY) as expireDate,dap.productDeadline as productDeadline,dap.multiple as multiple,#{uid} as uid,#{remark} as remark,
			0 as userKey,if(dap.type = 3,100,3) as source
		from dr_activity_parameter dap 
		where dap.ID in 
		<foreach collection="fids" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<!--  
		and NOT EXISTS 
		(
			select 1 from dr_member_favourable dmf where dmf.uid =#{uid} and dap.ID = dmf.activityId
		)-->	
	</select>
	
	<insert id="batchInsert" parameterType="java.util.List">
		<foreach collection="list" item="item" separator=";" >
			insert into dr_member_favourable (activityId,uid,type,code,name,amount,raisedRates,enableAmount,
				status,expireDate,remark,user_key,addtime,source,productDeadline,multiple,pid)
			values 
			(#{item.activityId},#{item.uid},#{item.type},#{item.code},#{item.name},#{item.amount},#{item.raisedRates},#{item.enableAmount},
			 	#{item.status},#{item.expireDate},#{item.remark},#{item.userKey},sysdate(),#{item.source},#{item.productDeadline},#{item.multiple},#{item.pid})

		</foreach>
	</insert>
	
	<!-- 获取优惠总数 -->
	<select id="getMemberFavourableTotal" parameterType="java.util.HashMap" resultType="Integer">
		select count(1) from dr_member_favourable mf
		left join dr_member dm ON mf.uid = dm.uid
		<where>
			<if test="mobilephone != null and mobilephone!=''">
				and dm.mobilePhone=#{mobilephone}
			</if>
			<if test="recommCodes != null and recommCodes!=''">
				and dm.recommCodes=#{recommCodes}
			</if>
			<if test="source != null">
				and dm.source =#{source}
			</if>
		</where>
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="DrMemberFavourableResult">
		select * from dr_member_favourable where id = #{id}
	</select>
	
	<select id="getExperienceAmount" parameterType="java.util.HashMap" resultType="java.math.BigDecimal">
		select sum(amount) from dr_member_favourable where uid = #{uid} and type=3 and FIND_IN_SET(id,#{experience})
	</select>
	
	<update id="updateByPrimaryKey" parameterType="com.jsjf.model.activity.DrMemberFavourable">
		update dr_member_favourable
		<trim prefix=" set " suffixOverrides=",">
			<if test="status != null"> status = #{status}, </if>
		 	<if test="profitAmount != null"> profitAmount = #{profitAmount}, </if>
		</trim>
		  where id = #{id}
	</update>
	
	<!-- 批量使用体验金，调用此方法更新体验金状态和返利 -->
	<update id="updateByExperience" parameterType="java.util.HashMap">
		update dr_member_favourable set profitAmount = truncate(amount*#{deadline:INTEGER}*#{dayRate:DECIMAL},2) ,status=1
		where uid=#{uid} and type=3 and FIND_IN_SET(id,#{experience:VARCHAR})
	</update>
	
	<update id="updateFavourableStatusByMap" parameterType="java.util.HashMap">
		update dr_member_favourable set <if test="status != null">status = #{status},</if>usedTime = now()<if test="source != null">,source = #{source}</if>
		<trim prefix=" where " prefixOverrides="and">
			<if test="id != null"> and id = #{id}</if>
			<if test="uid != null "> and uid = #{uid}</if>
			<if test="type != null "> and type = #{type}</if>
			<if test="eStatus != null "> and status = #{eStatus }</if>
			<if test="pid != null and id ==null"> and pid = #{pid}</if>
			<if test="ids != null and ids !=''"> and id in 
				<foreach collection="ids" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="esource != null "> and source = #{esource}</if>
		</trim>
	</update>
	
	<select id="getMemberFavourableByParam" parameterType="java.util.HashMap" resultMap="DrMemberFavourableResult">
		SELECT mf.*,dpi.fullName from dr_member_favourable mf
			LEFT JOIN dr_product_info dpi ON mf.pid = dpi.id
		<where>
			<if test="id != null"> and mf.id = #{id}</if>
			<if test="status != null"> and mf.status = #{status}</if>
			<if test="uid != null"> and mf.uid = #{uid} </if>
			<if test="type != null">
				 and mf.type in 
				 <foreach collection="type" item="item" open="(" close=")" separator="," >
				 	#{item}
				 </foreach>
			 </if>
			<if test="amount != null"> and <![CDATA[ #{amount} >= mf.enableAmount ]]> </if>
			<if test="time != null"> and <![CDATA[ DATE_FORMAT(#{time}, '%Y-%m-%d') <= DATE_FORMAT(mf.expireDate, '%Y-%m-%d') ]]> </if>
			<if test="deadline != null "> and <![CDATA[ #{deadline} >= mf.productDeadline ]]></if>
			<if test="source != null "> and mf.source=#{source}</if>
		</where>
		order by mf.type desc,mf.status,mf.amount desc,mf.expireDate
	</select>
	
	<update id="updateFavourableStatus" parameterType="com.jsjf.model.activity.DrMemberFavourable">
		update dr_member_favourable set status = #{status}
		<if test="usedTime != null">
			,usedTime=#{usedTime}
		</if>
		<where>
			<if test="id != null"> and id = #{id}</if>
			<if test="uid != null and id ==null"> and uid = #{uid}</if>
			<if test="type != null and id ==null"> and type = #{type}</if>
			<if test="pid != null and id ==null"> and pid = #{pid}</if>
		</where>
	</update>
	<select id="getMemberFavourableByCode" parameterType="java.util.HashMap" resultMap="DrMemberFavourableResult">
		select dap.id as activityId,dap.type as type,dap.code as code,dap.name as name,dap.amount as amount,dap.raisedRates as raisedRates,dap.enableAmount as enableAmount,
		0 as status,DATE_ADD(NOW(),INTERVAL dap.deadline DAY) as expireDate,dap.productDeadline as productDeadline,dap.multiple as multiple,#{uid} as uid,#{remark} as remark,
		0 as userKey,if(dap.type = 3,100,3) as source
		from dr_activity_parameter dap
		where dap.code = #{code}
		<!--
		and NOT EXISTS
		(
			select 1 from dr_member_favourable dmf where dmf.uid =#{uid} and dap.ID = dmf.activityId
		)-->
	</select>
</mapper>